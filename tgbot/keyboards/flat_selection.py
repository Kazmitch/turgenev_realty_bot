from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.callback_data import CallbackData

from tgbot.keyboards.building_menu import menu_button, building
from tgbot.keyboards.make_call import call_button
from tgbot.keyboards.send_contact import contact_button

order_cd = CallbackData('order', 'building_name', 'sort')
flat_selection_cd = CallbackData('selection', 'building_name', 'option')
show_flat_cd = CallbackData('show', 'building_name', 'option')
flat_params = CallbackData('params', 'building_name', 'param')


async def flat_selection_keyboard(building_name: str) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞ –∫–Ω–æ–ø–∫—É '–ü–æ–¥–æ–±—Ä–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É'."""

    markup = InlineKeyboardMarkup(row_width=2)

    markup.inline_keyboard = [
        [
            InlineKeyboardButton(
                text='1Ô∏è‚É£ –ü–ª–æ—â–∞–¥—å –∫–≤–∞—Ä—Ç–∏—Ä—ã',
                callback_data=flat_selection_cd.new(building_name=building_name, option='flat_area')
            ),
            InlineKeyboardButton(
                text='2Ô∏è‚É£ –¶–µ–Ω–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã',
                callback_data=flat_selection_cd.new(building_name=building_name, option='flat_price')
            )
        ],
        [
            InlineKeyboardButton(
                text='3Ô∏è‚É£ –ì–æ–¥ —Å–¥–∞—á–∏ –æ–±—ä–µ–∫—Ç–∞',
                callback_data=flat_selection_cd.new(building_name=building_name, option='flat_year')
            ),
            InlineKeyboardButton(
                text='4Ô∏è‚É£ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç',
                callback_data=flat_selection_cd.new(building_name=building_name, option='flat_rooms')
            )
        ],
        [
            InlineKeyboardButton(
                text='–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è',
                callback_data=show_flat_cd.new(building_name=building_name, option='show_flats')
            )
        ]
    ]

    markup.row(await menu_button(building_name))

    return markup


async def type_value_keyboard(building_name: str):
    """–°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤–≤–æ–¥–∞ –∑–Ω–∞—á–µ–Ω–∏—è."""
    markup = InlineKeyboardMarkup(row_width=1)

    markup.inline_keyboard = [
        [
            InlineKeyboardButton(
                text='–†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã',
                callback_data=flat_params.new(building_name=building_name, param=0),
            )
        ],
        [
            InlineKeyboardButton(
                text='üîô –í–µ—Ä–Ω—É—Ç—å—Å—è',
                callback_data=building.new(name=building_name, section='flats'),
            )
        ],
    ]
    return markup


async def order_flats_keyboard(building_name: str):
    """–°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –ø–æ–∫–∞–∑–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –Ω—É–∂–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ."""
    # –°–æ–∑–¥–∞–µ–º –ö–ª–∞–≤–∏–∞—Ç—É—Ä—É
    markup = InlineKeyboardMarkup(row_width=2)

    markup.inline_keyboard = [
        [
            InlineKeyboardButton(
                text='‚¨ÜÔ∏è –ü–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é —Ü–µ–Ω—ã',
                callback_data=order_cd.new(building_name=building_name, sort='price_low_to_high'),
            ),
            InlineKeyboardButton(
                text='‚¨áÔ∏è –ü–æ —É–±—ã–≤–∞–Ω–∏—é —Ü–µ–Ω—ã',
                callback_data=order_cd.new(building_name=building_name, sort='price_high_to_low'),
            )
        ],
        [
            InlineKeyboardButton(
                text='‚¨ÜÔ∏è –ü–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é –ø–ª–æ—â–∞–¥–∏',
                callback_data=order_cd.new(building_name=building_name, sort='area_low_to_high'),
            ),
            InlineKeyboardButton(
                text='‚¨áÔ∏è –ü–æ —É–±—ã–≤–∞–Ω–∏—é –ø–ª–æ—â–∞–¥–∏',
                callback_data=order_cd.new(building_name=building_name, sort='area_high_to_low'),
            )
        ],
        [
            InlineKeyboardButton(
                text='üîô –í–µ—Ä–Ω—É—Ç—å—Å—è',
                callback_data=building.new(name=building_name, section='flats')
            )
        ]
    ]

    markup.row(await call_button(building_name))
    markup.row(await contact_button(building_name))
    markup.row(await menu_button(building_name))

    return markup
